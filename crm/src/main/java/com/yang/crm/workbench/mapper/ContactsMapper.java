package com.yang.crm.workbench.mapper;

import com.yang.crm.workbench.domain.Contacts;
import com.yang.crm.workbench.domain.FunnelVO;

import java.util.List;
import java.util.Map;

public interface ContactsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Thu Mar 24 21:35:58 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Thu Mar 24 21:35:58 CST 2022
     */
    int insert(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Thu Mar 24 21:35:58 CST 2022
     */
    int insertSelective(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Thu Mar 24 21:35:58 CST 2022
     */
    Contacts selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Thu Mar 24 21:35:58 CST 2022
     */
    int updateByPrimaryKeySelective(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Thu Mar 24 21:35:58 CST 2022
     */
    int updateByPrimaryKey(Contacts record);

    /**
     * 新增联系
     * @param contacts 联系对象封装的参数
     * @return 新增条数
     */
    int insertContacts(Contacts contacts);

    /**
     * 根据条件分页查询联系人列表
     * @param map 查询条件
     * @return 查询到的联系人
     */
    List<Contacts> selectContactsByConditionForPage(Map<String, Object> map);

    /**
     * 根据条件查询联系人总条数
     * @param map 查询条件
     * @return 联系人总条数
     */
    int selectCountOfContactsByCondition(Map<String, Object> map);

    /**
     * 通过id查询联系人
     * @param id 联系人id
     * @return 对应id的联系人
     */
    Contacts selectContactsById(String id);

    /**
     * 更新对应联系人的数据
     * @param contacts 更新的联系人
     * @return 更新条数
     */
    int updateContacts(Contacts contacts);

    /**
     * 通过id删除选则的联系人
     * @param contactsIds 联系人id数组
     * @return 删除的条数
     */
    int deleteContactsByIds(String[] contactsIds);

    /**
     * 通过联系人id查询联系人的详细信息
     * @param id 联系人id
     * @return 查询的联系人详细信息
     */
    Contacts selectContactsForDetailById(String id);

    /**
     * 通过姓名模糊查询联系人
     * @param contactsName 模糊姓名
     * @return 查询到的线索
     */
    List<Contacts> selectContactsByFuzzyName(String contactsName);

    List<FunnelVO> selectCountOfCustomerAndContactsGroupByCustomer();
}