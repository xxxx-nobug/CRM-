package com.yang.crm.workbench.mapper;

import com.yang.crm.workbench.domain.Customer;
import com.yang.crm.workbench.domain.FunnelVO;

import java.util.List;
import java.util.Map;

public interface CustomerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed Mar 23 20:58:10 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed Mar 23 20:58:10 CST 2022
     */
    int insert(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed Mar 23 20:58:10 CST 2022
     */
    int insertSelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed Mar 23 20:58:10 CST 2022
     */
    Customer selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed Mar 23 20:58:10 CST 2022
     */
    int updateByPrimaryKeySelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed Mar 23 20:58:10 CST 2022
     */
    int updateByPrimaryKey(Customer record);

    /**
     * 插入新用户
     * @param customer 用户信息
     * @return 插入条数
     */
    int insertCustomer(Customer customer);

    /**
     * 根据条件分页查询客户列表
     * @param map 查询条件
     * @return 查询到的客户
     */
    List<Customer> selectCustomerByConditionForPage(Map<String, Object> map);

    /**
     * 根据条件查询客户总条数
     * @param map 查询条件
     * @return 客户总条数
     */
    int selectCountOfCustomerByCondition(Map<String, Object> map);

    /**
     * 通过id查询客户信息
     * @param id 客户id
     * @return 查询到的客户
     */
    Customer selectCustomerById(String id);

    /**
     * 修改客户
     * @param customer 客户信息
     * @return 修改条数
     */
    int updateCustomer(Customer customer);

    /**
     * 通过客户id数组删除对应的客户
     * @param ids 客户id数组
     * @return 删除的条数
     */
    int deleteCustomerByIds(String[] ids);

    /**
     * 通过客户id查询客户的详细信息
     * @param id 客户id
     * @return 查询到的客户
     */
    Customer selectCustomerForDetailById(String id);

    /**
     * 通过客户姓名模糊查询客户全名
     * @param customerName 模糊查询客户姓名
     * @return 匹配的客户全名
     */
    List<String> selectCustomerNameByFuzzyName(String customerName);

    /**
     * 通过客户姓名查询客户详细信息
     * @param customerName 客户姓名
     * @return 客户
     */
    Customer selectCustomerByName(String customerName);

    /**
     * 通过客户姓名查询客户id
     * @param customerName 客户姓名
     * @return 客户姓名
     */
    String selectCustomerIdByName(String customerName);
}